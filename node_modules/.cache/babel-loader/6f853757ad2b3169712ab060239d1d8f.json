{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.onSideArrowTap = exports.onEscapeOrEnterTap = exports.isOnMobileDevice = exports.getTimeString = exports.getSameInputProps = exports.getDatePartsByProps = exports.doubleChar = void 0;\n\nconst doubleChar = value => (value.length >= 2 ? value : \"0\" + value).slice(-2);\n\nexports.doubleChar = doubleChar;\n\nconst isOnMobileDevice = () => {\n  let prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\n\n  let matchMediaQuery = function matchMediaQuery(query) {\n    return window.matchMedia(query).matches;\n  };\n\n  if (\"ontouchstart\" in window || navigator.maxTouchPoints) {\n    return true;\n  }\n\n  let query = [\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\");\n  return matchMediaQuery(query);\n};\n\nexports.isOnMobileDevice = isOnMobileDevice;\n\nconst getDatePartsByProps = (stringTimeValue, hour12Format) => {\n  const hourByProp = (stringTimeValue || \"\").toString().trim().substring(0, 2);\n  const minuteByProp = (stringTimeValue || \"\").toString().trim().substring(3, 5);\n  const editHourByFormat = hour12Format ? hourByProp <= 12 ? hourByProp : hourByProp - 12 : hourByProp;\n  return {\n    hour: parseInt(editHourByFormat) === 0 && hour12Format ? \"12\" : doubleChar(editHourByFormat),\n    minute: doubleChar(minuteByProp),\n    amPm: parseInt(editHourByFormat) === 0 && hour12Format ? \"AM\" : hourByProp < 12 ? \"AM\" : \"PM\"\n  };\n};\n\nexports.getDatePartsByProps = getDatePartsByProps;\n\nconst onEscapeOrEnterTap = (e, props) => {\n  const {\n    inputFocused,\n    eachInputDropdown,\n    movePrev,\n    setInputFocused,\n    inputRef,\n    moveNext\n  } = props;\n\n  if (e.key === \"Escape\" && inputFocused && eachInputDropdown) {\n    setInputFocused(false);\n\n    if (movePrev) {\n      movePrev();\n    } else {\n      inputRef.current.blur();\n    }\n  }\n\n  if (e.key === \"Enter\" && inputFocused && eachInputDropdown) {\n    setInputFocused(false);\n\n    if (moveNext) {\n      moveNext();\n    } else {\n      inputRef.current.blur();\n    }\n  }\n};\n\nexports.onEscapeOrEnterTap = onEscapeOrEnterTap;\n\nconst onSideArrowTap = (e, props) => {\n  const {\n    moveNext,\n    movePrev\n  } = props;\n  e.key === \"ArrowRight\" && moveNext && moveNext();\n  e.key === \"ArrowLeft\" && movePrev && movePrev();\n};\n\nexports.onSideArrowTap = onSideArrowTap;\n\nconst getSameInputProps = props => {\n  const {\n    setInputFocused,\n    inputFocused,\n    disabled,\n    inputRef,\n    manuallyDisplayDropdown\n  } = props;\n  return {\n    onFocusCapture: () => !manuallyDisplayDropdown && setInputFocused(true),\n    disabled,\n    onBlurCapture: e => {\n      !inputFocused && setTimeout(() => {\n        setInputFocused(false);\n      }, 10);\n    },\n    ref: inputRef\n  };\n};\n\nexports.getSameInputProps = getSameInputProps;\n\nconst getTimeString = (hour, minute, amPm, hour12Format) => {\n  let hour24Format = !hour12Format && doubleChar(hour);\n  let hour12Am = amPm === \"AM\" && hour.toString() === \"12\" && \"00\";\n  let hour12Pm = amPm === \"PM\" && hour.toString() === \"12\" && \"12\";\n  const calculateHour = parseInt(hour) + (amPm === \"PM\" && hour !== \"12\" ? 12 : 0);\n  let dateString24 = doubleChar((hour24Format || hour12Am || hour12Pm || calculateHour).toString()) + \":\" + minute; // let hour24 = dateString24.substring(0, 2);\n  // let hour12 = doubleChar(parseInt(hour24) < 12 ? hour24 : parseInt(hour24) - 12);\n  // let amPmString = parseInt(hour24) < 12 ? \"AM\" : \"PM\";\n\n  return dateString24;\n};\n\nexports.getTimeString = getTimeString;","map":{"version":3,"sources":["/Users/yurikotakamiya/lambdaAssignment/Unit3/front-end/node_modules/react-time-picker-input/dist/components/actions.js"],"names":["Object","defineProperty","exports","value","onSideArrowTap","onEscapeOrEnterTap","isOnMobileDevice","getTimeString","getSameInputProps","getDatePartsByProps","doubleChar","length","slice","prefixes","split","matchMediaQuery","query","window","matchMedia","matches","navigator","maxTouchPoints","join","stringTimeValue","hour12Format","hourByProp","toString","trim","substring","minuteByProp","editHourByFormat","hour","parseInt","minute","amPm","e","props","inputFocused","eachInputDropdown","movePrev","setInputFocused","inputRef","moveNext","key","current","blur","disabled","manuallyDisplayDropdown","onFocusCapture","onBlurCapture","setTimeout","ref","hour24Format","hour12Am","hour12Pm","calculateHour","dateString24"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,kBAAR,GAA6BH,OAAO,CAACI,gBAAR,GAA2BJ,OAAO,CAACK,aAAR,GAAwBL,OAAO,CAACM,iBAAR,GAA4BN,OAAO,CAACO,mBAAR,GAA8BP,OAAO,CAACQ,UAAR,GAAqB,KAAK,CAA7L;;AAYA,MAAMA,UAAU,GAAGP,KAAK,IAAI,CAACA,KAAK,CAACQ,MAAN,IAAgB,CAAhB,GAAoBR,KAApB,GAA4B,MAAMA,KAAnC,EAA0CS,KAA1C,CAAgD,CAAC,CAAjD,CAA5B;;AAEAV,OAAO,CAACQ,UAAR,GAAqBA,UAArB;;AAEA,MAAMJ,gBAAgB,GAAG,MAAM;AAC7B,MAAIO,QAAQ,GAAG,4BAA4BC,KAA5B,CAAkC,GAAlC,CAAf;;AAEA,MAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;AACpD,WAAOC,MAAM,CAACC,UAAP,CAAkBF,KAAlB,EAAyBG,OAAhC;AACD,GAFD;;AAIA,MAAI,kBAAkBF,MAAlB,IAA4BG,SAAS,CAACC,cAA1C,EAA0D;AACxD,WAAO,IAAP;AACD;;AAED,MAAIL,KAAK,GAAG,CAAC,GAAD,EAAMH,QAAQ,CAACS,IAAT,CAAc,kBAAd,CAAN,EAAyC,QAAzC,EAAmD,GAAnD,EAAwDA,IAAxD,CAA6D,EAA7D,CAAZ;AACA,SAAOP,eAAe,CAACC,KAAD,CAAtB;AACD,CAbD;;AAeAd,OAAO,CAACI,gBAAR,GAA2BA,gBAA3B;;AAEA,MAAMG,mBAAmB,GAAG,CAACc,eAAD,EAAkBC,YAAlB,KAAmC;AAC7D,QAAMC,UAAU,GAAG,CAACF,eAAe,IAAI,EAApB,EAAwBG,QAAxB,GAAmCC,IAAnC,GAA0CC,SAA1C,CAAoD,CAApD,EAAuD,CAAvD,CAAnB;AACA,QAAMC,YAAY,GAAG,CAACN,eAAe,IAAI,EAApB,EAAwBG,QAAxB,GAAmCC,IAAnC,GAA0CC,SAA1C,CAAoD,CAApD,EAAuD,CAAvD,CAArB;AACA,QAAME,gBAAgB,GAAGN,YAAY,GAAGC,UAAU,IAAI,EAAd,GAAmBA,UAAnB,GAAgCA,UAAU,GAAG,EAAhD,GAAqDA,UAA1F;AACA,SAAO;AACLM,IAAAA,IAAI,EAAEC,QAAQ,CAACF,gBAAD,CAAR,KAA+B,CAA/B,IAAoCN,YAApC,GAAmD,IAAnD,GAA0Dd,UAAU,CAACoB,gBAAD,CADrE;AAELG,IAAAA,MAAM,EAAEvB,UAAU,CAACmB,YAAD,CAFb;AAGLK,IAAAA,IAAI,EAAEF,QAAQ,CAACF,gBAAD,CAAR,KAA+B,CAA/B,IAAoCN,YAApC,GAAmD,IAAnD,GAA0DC,UAAU,GAAG,EAAb,GAAkB,IAAlB,GAAyB;AAHpF,GAAP;AAKD,CATD;;AAWAvB,OAAO,CAACO,mBAAR,GAA8BA,mBAA9B;;AAEA,MAAMJ,kBAAkB,GAAG,CAAC8B,CAAD,EAAIC,KAAJ,KAAc;AACvC,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA;AANI,MAOFN,KAPJ;;AASA,MAAID,CAAC,CAACQ,GAAF,KAAU,QAAV,IAAsBN,YAAtB,IAAsCC,iBAA1C,EAA6D;AAC3DE,IAAAA,eAAe,CAAC,KAAD,CAAf;;AAEA,QAAID,QAAJ,EAAc;AACZA,MAAAA,QAAQ;AACT,KAFD,MAEO;AACLE,MAAAA,QAAQ,CAACG,OAAT,CAAiBC,IAAjB;AACD;AACF;;AAED,MAAIV,CAAC,CAACQ,GAAF,KAAU,OAAV,IAAqBN,YAArB,IAAqCC,iBAAzC,EAA4D;AAC1DE,IAAAA,eAAe,CAAC,KAAD,CAAf;;AAEA,QAAIE,QAAJ,EAAc;AACZA,MAAAA,QAAQ;AACT,KAFD,MAEO;AACLD,MAAAA,QAAQ,CAACG,OAAT,CAAiBC,IAAjB;AACD;AACF;AACF,CA7BD;;AA+BA3C,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;;AAEA,MAAMD,cAAc,GAAG,CAAC+B,CAAD,EAAIC,KAAJ,KAAc;AACnC,QAAM;AACJM,IAAAA,QADI;AAEJH,IAAAA;AAFI,MAGFH,KAHJ;AAIAD,EAAAA,CAAC,CAACQ,GAAF,KAAU,YAAV,IAA0BD,QAA1B,IAAsCA,QAAQ,EAA9C;AACAP,EAAAA,CAAC,CAACQ,GAAF,KAAU,WAAV,IAAyBJ,QAAzB,IAAqCA,QAAQ,EAA7C;AACD,CAPD;;AASArC,OAAO,CAACE,cAAR,GAAyBA,cAAzB;;AAEA,MAAMI,iBAAiB,GAAG4B,KAAK,IAAI;AACjC,QAAM;AACJI,IAAAA,eADI;AAEJH,IAAAA,YAFI;AAGJS,IAAAA,QAHI;AAIJL,IAAAA,QAJI;AAKJM,IAAAA;AALI,MAMFX,KANJ;AAOA,SAAO;AACLY,IAAAA,cAAc,EAAE,MAAM,CAACD,uBAAD,IAA4BP,eAAe,CAAC,IAAD,CAD5D;AAELM,IAAAA,QAFK;AAGLG,IAAAA,aAAa,EAAEd,CAAC,IAAI;AAClB,OAACE,YAAD,IAAiBa,UAAU,CAAC,MAAM;AAChCV,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD,OAF0B,EAExB,EAFwB,CAA3B;AAGD,KAPI;AAQLW,IAAAA,GAAG,EAAEV;AARA,GAAP;AAUD,CAlBD;;AAoBAvC,OAAO,CAACM,iBAAR,GAA4BA,iBAA5B;;AAEA,MAAMD,aAAa,GAAG,CAACwB,IAAD,EAAOE,MAAP,EAAeC,IAAf,EAAqBV,YAArB,KAAsC;AAC1D,MAAI4B,YAAY,GAAG,CAAC5B,YAAD,IAAiBd,UAAU,CAACqB,IAAD,CAA9C;AACA,MAAIsB,QAAQ,GAAGnB,IAAI,KAAK,IAAT,IAAiBH,IAAI,CAACL,QAAL,OAAoB,IAArC,IAA6C,IAA5D;AACA,MAAI4B,QAAQ,GAAGpB,IAAI,KAAK,IAAT,IAAiBH,IAAI,CAACL,QAAL,OAAoB,IAArC,IAA6C,IAA5D;AACA,QAAM6B,aAAa,GAAGvB,QAAQ,CAACD,IAAD,CAAR,IAAkBG,IAAI,KAAK,IAAT,IAAiBH,IAAI,KAAK,IAA1B,GAAiC,EAAjC,GAAsC,CAAxD,CAAtB;AACA,MAAIyB,YAAY,GAAG9C,UAAU,CAAC,CAAC0C,YAAY,IAAIC,QAAhB,IAA4BC,QAA5B,IAAwCC,aAAzC,EAAwD7B,QAAxD,EAAD,CAAV,GAAiF,GAAjF,GAAuFO,MAA1G,CAL0D,CAKwD;AAClH;AACA;;AAEA,SAAOuB,YAAP;AACD,CAVD;;AAYAtD,OAAO,CAACK,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.onSideArrowTap = exports.onEscapeOrEnterTap = exports.isOnMobileDevice = exports.getTimeString = exports.getSameInputProps = exports.getDatePartsByProps = exports.doubleChar = void 0;\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.split.js\");\n\nrequire(\"core-js/modules/es.string.trim.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.parse-int.js\");\n\nconst doubleChar = value => (value.length >= 2 ? value : \"0\" + value).slice(-2);\n\nexports.doubleChar = doubleChar;\n\nconst isOnMobileDevice = () => {\n  let prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\n\n  let matchMediaQuery = function matchMediaQuery(query) {\n    return window.matchMedia(query).matches;\n  };\n\n  if (\"ontouchstart\" in window || navigator.maxTouchPoints) {\n    return true;\n  }\n\n  let query = [\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\");\n  return matchMediaQuery(query);\n};\n\nexports.isOnMobileDevice = isOnMobileDevice;\n\nconst getDatePartsByProps = (stringTimeValue, hour12Format) => {\n  const hourByProp = (stringTimeValue || \"\").toString().trim().substring(0, 2);\n  const minuteByProp = (stringTimeValue || \"\").toString().trim().substring(3, 5);\n  const editHourByFormat = hour12Format ? hourByProp <= 12 ? hourByProp : hourByProp - 12 : hourByProp;\n  return {\n    hour: parseInt(editHourByFormat) === 0 && hour12Format ? \"12\" : doubleChar(editHourByFormat),\n    minute: doubleChar(minuteByProp),\n    amPm: parseInt(editHourByFormat) === 0 && hour12Format ? \"AM\" : hourByProp < 12 ? \"AM\" : \"PM\"\n  };\n};\n\nexports.getDatePartsByProps = getDatePartsByProps;\n\nconst onEscapeOrEnterTap = (e, props) => {\n  const {\n    inputFocused,\n    eachInputDropdown,\n    movePrev,\n    setInputFocused,\n    inputRef,\n    moveNext\n  } = props;\n\n  if (e.key === \"Escape\" && inputFocused && eachInputDropdown) {\n    setInputFocused(false);\n\n    if (movePrev) {\n      movePrev();\n    } else {\n      inputRef.current.blur();\n    }\n  }\n\n  if (e.key === \"Enter\" && inputFocused && eachInputDropdown) {\n    setInputFocused(false);\n\n    if (moveNext) {\n      moveNext();\n    } else {\n      inputRef.current.blur();\n    }\n  }\n};\n\nexports.onEscapeOrEnterTap = onEscapeOrEnterTap;\n\nconst onSideArrowTap = (e, props) => {\n  const {\n    moveNext,\n    movePrev\n  } = props;\n  e.key === \"ArrowRight\" && moveNext && moveNext();\n  e.key === \"ArrowLeft\" && movePrev && movePrev();\n};\n\nexports.onSideArrowTap = onSideArrowTap;\n\nconst getSameInputProps = props => {\n  const {\n    setInputFocused,\n    inputFocused,\n    disabled,\n    inputRef,\n    manuallyDisplayDropdown\n  } = props;\n  return {\n    onFocusCapture: () => !manuallyDisplayDropdown && setInputFocused(true),\n    disabled,\n    onBlurCapture: e => {\n      !inputFocused && setTimeout(() => {\n        setInputFocused(false);\n      }, 10);\n    },\n    ref: inputRef\n  };\n};\n\nexports.getSameInputProps = getSameInputProps;\n\nconst getTimeString = (hour, minute, amPm, hour12Format) => {\n  let hour24Format = !hour12Format && doubleChar(hour);\n  let hour12Am = amPm === \"AM\" && hour.toString() === \"12\" && \"00\";\n  let hour12Pm = amPm === \"PM\" && hour.toString() === \"12\" && \"12\";\n  const calculateHour = parseInt(hour) + (amPm === \"PM\" && hour !== \"12\" ? 12 : 0);\n  let dateString24 = doubleChar((hour24Format || hour12Am || hour12Pm || calculateHour).toString()) + \":\" + minute; // let hour24 = dateString24.substring(0, 2);\n  // let hour12 = doubleChar(parseInt(hour24) < 12 ? hour24 : parseInt(hour24) - 12);\n  // let amPmString = parseInt(hour24) < 12 ? \"AM\" : \"PM\";\n\n  return dateString24;\n};\n\nexports.getTimeString = getTimeString;"]},"metadata":{},"sourceType":"script"}